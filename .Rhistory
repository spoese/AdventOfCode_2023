library(tidyverse)
lines <- read_lines("https://adventofcode.com/2023/day/1/input")
lines
lines <- read_lines(url("https://adventofcode.com/2023/day/1/input"))
lines <- read_lines("~/Day 1 - Puzzle 1/Data1-1.xlsx")
lines <- read_lines("Day 1 - Puzzle 1/Data1-1.xlsx")
lines
lines <- readxl::read_excel("Day 1 - Puzzle 1/Data1-1.xlsx")
lines
lines <- readxl::read_excel("Day 1 - Puzzle 1/Data1-1.xlsx",col_names = FALSE)
lines
?grep
grep("/[0-9]", lines)
grep("[0-9]", lines)
lines |>
mutate(first = grep(pattern = "[0-9]", x = .))
lines |>
mutate(first = grep(pattern = "[0-9]", x = .x))
lines |>
mutate(first = grep(pattern = "[0-9]", x = "...1"))
str_extract_all(lines, [:digit:])
str_extract_all(lines,"[:digit:]")
lines <- readxl::read_excel("Day 1 - Puzzle 1/Data1-1.xlsx",col_names = FALSE) |>
rename("Codes" = "...1")
lines
lines <- readxl::read_excel("Day 1 - Puzzle 1/Data1-1.xlsx",col_names = FALSE) |>
rename("...1" = "Codes")
lines <- readxl::read_excel("Day 1 - Puzzle 1/Data1-1.xlsx",col_names = FALSE) |>
rename("Codes" = "...1")
lines
lines |>
mutate(Digits = str_extract_all(Codes, "[:Digit:]"))
lines |>
mutate(Digits = str_extract_all(Codes, "[:Digit:]", simplify = TRUE))
lines |>
mutate(Digits = paste0(str_extract_all(Codes, "[:Digit:]", simplify = TRUE)))
str_extract_all(lines$Codes, "[:Digit:]", simplify = TRUE)
str_extract_all(lines$Codes, "[:Digit:]")
str_extract(lines$Codes, "[:Digit:]")
?str_extract
lines |>
mutate(Digits = paste0(str_extract_all(Codes, "[:Digit:]", simplify = TRUE)))
lines |>
mutate(Digits = c(str_extract_all(Codes, "[:Digit:]", simplify = TRUE)))
lines |>
mutate(Digits = str_extract_all(Codes, "[:Digit:]", simplify = TRUE))
str_extract(lines$Codes[1], "[:Digit:]")
str_extract_all(lines$Codes[1], "[:Digit:]")
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE)
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE) |>
as.vector()
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE) |>
as.vector() |>
c()
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE) |>
as.vector() |>
paste0()
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE) |>
as.vector() |>
paste()
str_extract_all(lines$Codes[1], "[:Digit:]", simplify = TRUE) |>
as.vector() |>
paste(sep = "")
lines |>
mutate(First = str_extract(Codes, "[:Digit:]"))
library(stringi)
lines |>
mutate(First = str_extract(Codes, "[:Digit:]"),
Last = str_extract(stri_reverse(Codes), "[:Digit:]"))
lines |>
mutate(First = str_extract(Codes, "[:Digit:]"),
Last = str_extract(stri_reverse(Codes), "[:Digit:]"),
Total = paste0(First,Last))
lines |>
mutate(First = str_extract(Codes, "[:Digit:]"),
Last = str_extract(stri_reverse(Codes), "[:Digit:]"),
Total = paste0(First,Last)) |>
summarize(Sum = sum(Total))
part1 <- lines |>
mutate(First = str_extract(Codes, "[:Digit:]"),
Last = str_extract(stri_reverse(Codes), "[:Digit:]"),
Total = paste0(First,Last))
sum(part1$Total)
part1 <- lines |>
mutate(First = str_extract(Codes, "[:Digit:]"),
Last = str_extract(stri_reverse(Codes), "[:Digit:]"),
Total = as.integer(paste0(First,Last)))
sum(part1$Total)
